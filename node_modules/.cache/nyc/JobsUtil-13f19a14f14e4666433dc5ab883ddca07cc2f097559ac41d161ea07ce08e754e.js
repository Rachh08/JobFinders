function cov_1jyxqtcuf8(){var path="C:\\Users\\Rache\\OneDrive\\Documents\\DVOPS_Projects\\final(3)\\JobFinders\\utils\\JobsUtil.js";var hash="d9b28d6a1a6b10f2ff3898ec8193d59c548228b2";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\Rache\\OneDrive\\Documents\\DVOPS_Projects\\final(3)\\JobFinders\\utils\\JobsUtil.js",statementMap:{"0":{start:{line:1,column:32},end:{line:1,column:53}},"1":{start:{line:2,column:16},end:{line:2,column:44}},"2":{start:{line:5,column:4},end:{line:36,column:5}},"3":{start:{line:6,column:24},end:{line:6,column:40}},"4":{start:{line:7,column:24},end:{line:7,column:40}},"5":{start:{line:8,column:25},end:{line:8,column:42}},"6":{start:{line:9,column:28},end:{line:9,column:48}},"7":{start:{line:10,column:24},end:{line:10,column:40}},"8":{start:{line:13,column:8},end:{line:15,column:9}},"9":{start:{line:14,column:12},end:{line:14,column:89}},"10":{start:{line:19,column:26},end:{line:19,column:46}},"11":{start:{line:20,column:8},end:{line:22,column:9}},"12":{start:{line:21,column:12},end:{line:21,column:138}},"13":{start:{line:25,column:27},end:{line:25,column:42}},"14":{start:{line:26,column:8},end:{line:28,column:9}},"15":{start:{line:27,column:12},end:{line:27,column:92}},"16":{start:{line:30,column:23},end:{line:30,column:80}},"17":{start:{line:32,column:27},end:{line:32,column:69}},"18":{start:{line:33,column:8},end:{line:33,column:48}},"19":{start:{line:35,column:8},end:{line:35,column:64}},"20":{start:{line:40,column:4},end:{line:45,column:5}},"21":{start:{line:41,column:24},end:{line:41,column:57}},"22":{start:{line:42,column:8},end:{line:42,column:45}},"23":{start:{line:44,column:8},end:{line:44,column:64}},"24":{start:{line:81,column:4},end:{line:107,column:5}},"25":{start:{line:82,column:22},end:{line:82,column:32}},"26":{start:{line:84,column:8},end:{line:86,column:9}},"27":{start:{line:85,column:12},end:{line:85,column:113}},"28":{start:{line:88,column:8},end:{line:90,column:9}},"29":{start:{line:89,column:12},end:{line:89,column:120}},"30":{start:{line:92,column:24},end:{line:92,column:57}},"31":{start:{line:94,column:30},end:{line:97,column:10}},"32":{start:{line:95,column:28},end:{line:95,column:68}},"33":{start:{line:96,column:12},end:{line:96,column:68}},"34":{start:{line:99,column:8},end:{line:103,column:9}},"35":{start:{line:100,column:12},end:{line:100,column:55}},"36":{start:{line:102,column:12},end:{line:102,column:80}},"37":{start:{line:105,column:8},end:{line:105,column:29}},"38":{start:{line:106,column:8},end:{line:106,column:105}},"39":{start:{line:112,column:0},end:{line:112,column:51}}},fnMap:{"0":{name:"addJobs",decl:{start:{line:4,column:15},end:{line:4,column:22}},loc:{start:{line:4,column:33},end:{line:37,column:1}},line:4},"1":{name:"viewJobs",decl:{start:{line:39,column:15},end:{line:39,column:23}},loc:{start:{line:39,column:34},end:{line:46,column:1}},line:39},"2":{name:"searchJobs",decl:{start:{line:80,column:15},end:{line:80,column:25}},loc:{start:{line:80,column:36},end:{line:108,column:1}},line:80},"3":{name:"(anonymous_3)",decl:{start:{line:94,column:45},end:{line:94,column:46}},loc:{start:{line:94,column:52},end:{line:97,column:9}},line:94}},branchMap:{"0":{loc:{start:{line:13,column:8},end:{line:15,column:9}},type:"if",locations:[{start:{line:13,column:8},end:{line:15,column:9}},{start:{line:13,column:8},end:{line:15,column:9}}],line:13},"1":{loc:{start:{line:13,column:12},end:{line:13,column:73}},type:"binary-expr",locations:[{start:{line:13,column:12},end:{line:13,column:20}},{start:{line:13,column:24},end:{line:13,column:32}},{start:{line:13,column:36},end:{line:13,column:45}},{start:{line:13,column:49},end:{line:13,column:61}},{start:{line:13,column:65},end:{line:13,column:73}}],line:13},"2":{loc:{start:{line:20,column:8},end:{line:22,column:9}},type:"if",locations:[{start:{line:20,column:8},end:{line:22,column:9}},{start:{line:20,column:8},end:{line:22,column:9}}],line:20},"3":{loc:{start:{line:20,column:12},end:{line:20,column:64}},type:"binary-expr",locations:[{start:{line:20,column:12},end:{line:20,column:36}},{start:{line:20,column:40},end:{line:20,column:64}}],line:20},"4":{loc:{start:{line:26,column:8},end:{line:28,column:9}},type:"if",locations:[{start:{line:26,column:8},end:{line:28,column:9}},{start:{line:26,column:8},end:{line:28,column:9}}],line:26},"5":{loc:{start:{line:84,column:8},end:{line:86,column:9}},type:"if",locations:[{start:{line:84,column:8},end:{line:86,column:9}},{start:{line:84,column:8},end:{line:86,column:9}}],line:84},"6":{loc:{start:{line:88,column:8},end:{line:90,column:9}},type:"if",locations:[{start:{line:88,column:8},end:{line:90,column:9}},{start:{line:88,column:8},end:{line:90,column:9}}],line:88},"7":{loc:{start:{line:95,column:28},end:{line:95,column:68}},type:"binary-expr",locations:[{start:{line:95,column:28},end:{line:95,column:39}},{start:{line:95,column:43},end:{line:95,column:68}}],line:95},"8":{loc:{start:{line:96,column:19},end:{line:96,column:67}},type:"binary-expr",locations:[{start:{line:96,column:19},end:{line:96,column:26}},{start:{line:96,column:30},end:{line:96,column:67}}],line:96},"9":{loc:{start:{line:99,column:8},end:{line:103,column:9}},type:"if",locations:[{start:{line:99,column:8},end:{line:103,column:9}},{start:{line:99,column:8},end:{line:103,column:9}}],line:99}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0},f:{"0":0,"1":0,"2":0,"3":0},b:{"0":[0,0],"1":[0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"d9b28d6a1a6b10f2ff3898ec8193d59c548228b2"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1jyxqtcuf8=function(){return actualCoverage;};}return actualCoverage;}cov_1jyxqtcuf8();const{readJSON,writeJSON}=(cov_1jyxqtcuf8().s[0]++,require('./UserUtil'));const{Job}=(cov_1jyxqtcuf8().s[1]++,require('../models/jobs.js'));async function addJobs(req,res){cov_1jyxqtcuf8().f[0]++;cov_1jyxqtcuf8().s[2]++;try{const jobName=(cov_1jyxqtcuf8().s[3]++,req.body.jobName);const company=(cov_1jyxqtcuf8().s[4]++,req.body.company);const location=(cov_1jyxqtcuf8().s[5]++,req.body.location);const description=(cov_1jyxqtcuf8().s[6]++,req.body.description);const contact=(cov_1jyxqtcuf8().s[7]++,req.body.contact);// Check if any of the input fields is empty
cov_1jyxqtcuf8().s[8]++;if((cov_1jyxqtcuf8().b[1][0]++,!jobName)||(cov_1jyxqtcuf8().b[1][1]++,!company)||(cov_1jyxqtcuf8().b[1][2]++,!location)||(cov_1jyxqtcuf8().b[1][3]++,!description)||(cov_1jyxqtcuf8().b[1][4]++,!contact)){cov_1jyxqtcuf8().b[0][0]++;cov_1jyxqtcuf8().s[9]++;return res.status(400).json({message:'All input fields must be filled.'});}else{cov_1jyxqtcuf8().b[0][1]++;}// Validate jobName and company fields
const onlyAlpha=(cov_1jyxqtcuf8().s[10]++,/^[A-Za-z\s]{1,50}$/);// Alphabets and spaces, up to 50 characters
cov_1jyxqtcuf8().s[11]++;if((cov_1jyxqtcuf8().b[3][0]++,!onlyAlpha.test(jobName))||(cov_1jyxqtcuf8().b[3][1]++,!onlyAlpha.test(company))){cov_1jyxqtcuf8().b[2][0]++;cov_1jyxqtcuf8().s[12]++;return res.status(400).json({message:'Job name and company must contain alphabets only and be up to 50 characters long.'});}else{cov_1jyxqtcuf8().b[2][1]++;}//Validate contact to include only 1 @ so that user provides contact email
const oneSpecial=(cov_1jyxqtcuf8().s[13]++,/^[^@]*@[^@]+$/);cov_1jyxqtcuf8().s[14]++;if(!oneSpecial.test(contact)){cov_1jyxqtcuf8().b[4][0]++;cov_1jyxqtcuf8().s[15]++;return res.status(400).json({message:"Provide valid contact details: email"});}else{cov_1jyxqtcuf8().b[4][1]++;}const newJob=(cov_1jyxqtcuf8().s[16]++,new Job(jobName,company,location,description,contact));const updatedJob=(cov_1jyxqtcuf8().s[17]++,await writeJSON(newJob,'utils/jobs.json'));cov_1jyxqtcuf8().s[18]++;return res.status(201).json(updatedJob);}catch(error){cov_1jyxqtcuf8().s[19]++;return res.status(500).json({message:error.message});}}async function viewJobs(req,res){cov_1jyxqtcuf8().f[1]++;cov_1jyxqtcuf8().s[20]++;try{const allJobs=(cov_1jyxqtcuf8().s[21]++,await readJSON('utils/jobs.json'));cov_1jyxqtcuf8().s[22]++;return res.status(201).json(allJobs);}catch(error){cov_1jyxqtcuf8().s[23]++;return res.status(500).json({message:error.message});}}// async function searchJobs(req, res) {
//     try {
//         // Assuming you have the search query in the request body
//         const query = req.body.q;
//         if (!query) {
//             return res.status(400).json({ message: "Search query is required in the request body." });
//         }
//         // Check if the query contains only letters
//         if (!/^[a-zA-Z]+$/.test(query)) {
//             return res.status(400).json({ message: "Search query should only contain letters." });
//         }
//         // Read jobs from the JSON file
//         const allJobs = await readJSON('utils/jobs.json');
//         // Filter jobs based on the query matching jobName
//         const searchResults = allJobs.filter(job => job.jobName.toLowerCase().includes(query.toLowerCase()));
//         if (searchResults.length > 0) {
//             return res.status(200).json(searchResults);
//         } else {
//             return res.status(404).json({ message: "No matching jobs found." });
//         }
//     } catch (error) {
//         return res.status(500).json({ message: error.message });
//     }
// }
async function searchJobs(req,res){cov_1jyxqtcuf8().f[2]++;cov_1jyxqtcuf8().s[24]++;try{const query=(cov_1jyxqtcuf8().s[25]++,req.body.q);cov_1jyxqtcuf8().s[26]++;if(!query){cov_1jyxqtcuf8().b[5][0]++;cov_1jyxqtcuf8().s[27]++;return res.status(400).json({error:{message:"Search query is required in the request body."}});}else{cov_1jyxqtcuf8().b[5][1]++;}cov_1jyxqtcuf8().s[28]++;if(!/^[a-zA-Z\s]+$/.test(query)){cov_1jyxqtcuf8().b[6][0]++;cov_1jyxqtcuf8().s[29]++;return res.status(400).json({error:{message:"Search query should only contain letters and spaces."}});}else{cov_1jyxqtcuf8().b[6][1]++;}const allJobs=(cov_1jyxqtcuf8().s[30]++,await readJSON('utils/jobs.json'));const searchResults=(cov_1jyxqtcuf8().s[31]++,allJobs.filter(job=>{cov_1jyxqtcuf8().f[3]++;const jobName=(cov_1jyxqtcuf8().s[32]++,(cov_1jyxqtcuf8().b[7][0]++,job.jobName)&&(cov_1jyxqtcuf8().b[7][1]++,job.jobName.toLowerCase()));// Check if jobName is defined
cov_1jyxqtcuf8().s[33]++;return(cov_1jyxqtcuf8().b[8][0]++,jobName)&&(cov_1jyxqtcuf8().b[8][1]++,jobName.includes(query.toLowerCase()));}));cov_1jyxqtcuf8().s[34]++;if(searchResults.length>0){cov_1jyxqtcuf8().b[9][0]++;cov_1jyxqtcuf8().s[35]++;return res.status(200).json(searchResults);}else{cov_1jyxqtcuf8().b[9][1]++;cov_1jyxqtcuf8().s[36]++;return res.status(404).json({message:"No matching jobs found."});}}catch(error){cov_1jyxqtcuf8().s[37]++;console.error(error);cov_1jyxqtcuf8().s[38]++;return res.status(500).json({error:{message:"An error occurred",details:error.message}});}}cov_1jyxqtcuf8().s[39]++;module.exports={viewJobs,addJobs,searchJobs};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,