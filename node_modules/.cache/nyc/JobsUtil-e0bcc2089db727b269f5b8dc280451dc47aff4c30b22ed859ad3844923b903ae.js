function cov_2n5b88b4wj(){var path="C:\\Users\\annsj\\Documents\\DVOPS_Projects\\Final\\JobFinders\\utils\\JobsUtil.js";var hash="5a27e2d8cd465339eee04191feb2dacb34990d09";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\annsj\\Documents\\DVOPS_Projects\\Final\\JobFinders\\utils\\JobsUtil.js",statementMap:{"0":{start:{line:1,column:32},end:{line:1,column:53}},"1":{start:{line:2,column:16},end:{line:2,column:44}},"2":{start:{line:7,column:4},end:{line:38,column:5}},"3":{start:{line:8,column:24},end:{line:8,column:40}},"4":{start:{line:9,column:24},end:{line:9,column:40}},"5":{start:{line:10,column:25},end:{line:10,column:42}},"6":{start:{line:11,column:28},end:{line:11,column:48}},"7":{start:{line:12,column:24},end:{line:12,column:40}},"8":{start:{line:15,column:8},end:{line:17,column:9}},"9":{start:{line:16,column:12},end:{line:16,column:89}},"10":{start:{line:21,column:26},end:{line:21,column:46}},"11":{start:{line:22,column:9},end:{line:24,column:10}},"12":{start:{line:23,column:13},end:{line:23,column:139}},"13":{start:{line:27,column:28},end:{line:27,column:43}},"14":{start:{line:28,column:9},end:{line:30,column:10}},"15":{start:{line:29,column:12},end:{line:29,column:90}},"16":{start:{line:32,column:23},end:{line:32,column:80}},"17":{start:{line:34,column:27},end:{line:34,column:69}},"18":{start:{line:35,column:8},end:{line:35,column:48}},"19":{start:{line:37,column:8},end:{line:37,column:64}},"20":{start:{line:81,column:0},end:{line:81,column:57}}},fnMap:{"0":{name:"addJobs",decl:{start:{line:6,column:15},end:{line:6,column:22}},loc:{start:{line:6,column:33},end:{line:39,column:1}},line:6}},branchMap:{"0":{loc:{start:{line:15,column:8},end:{line:17,column:9}},type:"if",locations:[{start:{line:15,column:8},end:{line:17,column:9}},{start:{line:15,column:8},end:{line:17,column:9}}],line:15},"1":{loc:{start:{line:15,column:12},end:{line:15,column:73}},type:"binary-expr",locations:[{start:{line:15,column:12},end:{line:15,column:20}},{start:{line:15,column:24},end:{line:15,column:32}},{start:{line:15,column:36},end:{line:15,column:45}},{start:{line:15,column:49},end:{line:15,column:61}},{start:{line:15,column:65},end:{line:15,column:73}}],line:15},"2":{loc:{start:{line:22,column:9},end:{line:24,column:10}},type:"if",locations:[{start:{line:22,column:9},end:{line:24,column:10}},{start:{line:22,column:9},end:{line:24,column:10}}],line:22},"3":{loc:{start:{line:22,column:13},end:{line:22,column:65}},type:"binary-expr",locations:[{start:{line:22,column:13},end:{line:22,column:37}},{start:{line:22,column:41},end:{line:22,column:65}}],line:22},"4":{loc:{start:{line:28,column:9},end:{line:30,column:10}},type:"if",locations:[{start:{line:28,column:9},end:{line:30,column:10}},{start:{line:28,column:9},end:{line:30,column:10}}],line:28}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0},f:{"0":0},b:{"0":[0,0],"1":[0,0,0,0,0],"2":[0,0],"3":[0,0],"4":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"5a27e2d8cd465339eee04191feb2dacb34990d09"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2n5b88b4wj=function(){return actualCoverage;};}return actualCoverage;}cov_2n5b88b4wj();const{readJSON,writeJSON}=(cov_2n5b88b4wj().s[0]++,require('./UserUtil'));const{Job}=(cov_2n5b88b4wj().s[1]++,require('../models/jobs.js'));async function addJobs(req,res){cov_2n5b88b4wj().f[0]++;cov_2n5b88b4wj().s[2]++;try{const jobName=(cov_2n5b88b4wj().s[3]++,req.body.jobName);const company=(cov_2n5b88b4wj().s[4]++,req.body.company);const location=(cov_2n5b88b4wj().s[5]++,req.body.location);const description=(cov_2n5b88b4wj().s[6]++,req.body.description);const contact=(cov_2n5b88b4wj().s[7]++,req.body.contact);// Check if any of the input fields is empty
cov_2n5b88b4wj().s[8]++;if((cov_2n5b88b4wj().b[1][0]++,!jobName)||(cov_2n5b88b4wj().b[1][1]++,!company)||(cov_2n5b88b4wj().b[1][2]++,!location)||(cov_2n5b88b4wj().b[1][3]++,!description)||(cov_2n5b88b4wj().b[1][4]++,!contact)){cov_2n5b88b4wj().b[0][0]++;cov_2n5b88b4wj().s[9]++;return res.status(400).json({message:'All input fields must be filled.'});}else{cov_2n5b88b4wj().b[0][1]++;}// Validate jobName and company fields
const onlyAlpha=(cov_2n5b88b4wj().s[10]++,/^[A-Za-z\s]{1,50}$/);// Alphabets and spaces, up to 50 characters
cov_2n5b88b4wj().s[11]++;if((cov_2n5b88b4wj().b[3][0]++,!onlyAlpha.test(jobName))||(cov_2n5b88b4wj().b[3][1]++,!onlyAlpha.test(company))){cov_2n5b88b4wj().b[2][0]++;cov_2n5b88b4wj().s[12]++;return res.status(400).json({message:'Job name and company must contain alphabets only and be up to 50 characters long.'});}else{cov_2n5b88b4wj().b[2][1]++;}//Validate contact to include only 1 @ so that user provides contact email
const oneSpecial=(cov_2n5b88b4wj().s[13]++,/^[^@]*@[^@]+$/);cov_2n5b88b4wj().s[14]++;if(!oneSpecial.test(contact)){cov_2n5b88b4wj().b[4][0]++;cov_2n5b88b4wj().s[15]++;return res.status(400).json({message:"Provide valid contact details: email"});}else{cov_2n5b88b4wj().b[4][1]++;}const newJob=(cov_2n5b88b4wj().s[16]++,new Job(jobName,company,location,description,contact));const updatedJob=(cov_2n5b88b4wj().s[17]++,await writeJSON(newJob,'utils/jobs.json'));cov_2n5b88b4wj().s[18]++;return res.status(201).json(updatedJob);}catch(error){cov_2n5b88b4wj().s[19]++;return res.status(500).json({message:error.message});}}// async function viewJobs(req, res) {
//     try {
//         const allJobs = await readJSON('utils/jobs.json');
//         return res.status(201).json(allJobs);
//     } catch (error) {
//         return res.status(500).json({ message: error.message });
//     }
// }
// async function searchJobs(req, res) {
//     try {
//         // Assuming you have the search query in the request body
//         const query = req.body.q;
//         if (!query) {
//             return res.status(400).json({ message: "Search query is required in the request body." });
//         }
//         // Check if the query contains only letters
//         if (!/^[a-zA-Z]+$/.test(query)) {
//             return res.status(400).json({ message: "Search query should only contain letters." });
//         }
//         // Read jobs from the JSON file
//         const allJobs = await readJSON('utils/jobs.json');
//         // Filter jobs based on the query matching jobName
//         const searchResults = allJobs.filter(job => job.jobName.toLowerCase().includes(query.toLowerCase()));
//         if (searchResults.length > 0) {
//             return res.status(200).json(searchResults);
//         } else {
//             return res.status(404).json({ message: "No matching jobs found." });
//         }
//     } catch (error) {
//         return res.status(500).json({ message: error.message });
//     }
// }
cov_2n5b88b4wj().s[20]++;module.exports={/*viewJobs*/addJobs/*searchJobs*/};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,